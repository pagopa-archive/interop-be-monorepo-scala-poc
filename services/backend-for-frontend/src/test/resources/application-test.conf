akka {
  test {
    timefactor =  3.0
  }
}

backend-for-frontend {
  port = 8088
  ec-keys-identifiers = "test"
  rsa-keys-identifiers = ""

  signer-max-connections = 10
  pagopa-tenant-id = "5ec5dd81-ff71-4af8-974b-4190eb8347bf"

  jwt {
    audience = "test.interop.pagopa.it/ui"
  }

  client-assertion-audience = "client-assertion-audience"

  generated-jwt {
    issuer = "issuer"
    audience = "test.interop.pagopa.it/ui"
    duration-seconds = 60
  }

  saml2-jwt {
    support-landing-token-duration-seconds = 300
    support-token-duration-seconds = 3600
    audience = "saml2.audience"
    callback-url = "https://selfcare.dev.interop.pagopa.it/ui/it/assistenza/scelta-ente"
    callback-error-url = "https://selfcare.dev.interop.pagopa.it/ui/it/assistenza/errore"
  }

  selfcare-product-id = "SELFCARE_PRODUCT_ID"

  api-keys {
    party-process = "PARTY_PROCESS_API_KEY"
    user-registry = "USER_REGISTRY_API_KEY"
    selfcare-v2   = "SELFCARE_V2_API_KEY"
  }

  services {
    party-process = "PARTY_PROCESS_URL"
    user-registry = "USER_REGISTRY_URL"
    attribute-registry-process = "ATTRIBUTE_REGISTRY_PROCESS_URL"
    agreement-process = "AGREEMENT_PROCESS_URL"
    catalog-process = "CATALOG_PROCESS_URL"
    tenant-process = "TENANT_PROCESS_URL"
    purpose-process = "PURPOSE_PROCESS_URL"
    authorization-management = "AUTHORIZATION_MANAGEMENT_URL"
    authorization-process = "AUTHORIZATION_PROCESS_URL"
    selfcare-v2 = "SELFCARE_V2_URL"
  }

  storage {
    kind = "File"
    risk-analysis-documents {
      container = "container"
      path = "risk-analysis/docs"
    }
    consumer-documents {
      container = "container"
      path = "agreement/consumer-docs"
    }
    eservice-documents {
      container = "container"
      path = "eservices/docs"
    }
    allow-list {
      container = "container"
      path = "allowlist"
      filename = "allowlist.txt"
    }
  }

  privacy-notices {
      table-name-privacy-notices        = "DynamoDBTable"
      table-name-privacy-notices-users  = "DynamoDBTable"
      pp-uuid                           = "30f93f48-575f-4c48-8621-27e9f2b835a2"
      tos-uuid                          = "6048cff0-0d4c-46e1-82e2-b795b959ca4f"
      container                         = "BucketName"
      path                              = "consent"
      filename                          = "notice.json"
  }

  rate-limiter {
    limiter-group = "BFF"
    max-requests = 100
    burst-percentage = 1.2
    rate-interval = "1.second"
    redis-host = "nowhere"
    redis-port = 0
    timeout = "3.seconds"
  }
}

interop-commons {
  
  jwt {
    internal-token {
        issuer = "issuer"
        subject = "subject"
        audience = "audience"
        duration-seconds = 10
    }
    public-keys {
      urls = "well-known1,well-known2"
    }
  }
}
