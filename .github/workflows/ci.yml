name: Continuous Integration

on:
  push:
    branches: ['**']
    tags: ['**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  create_runner:
    name: Create Self-Hosted Runner
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        index: [1]
      fail-fast: true
    environment: dev
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Start GitHub Runner
        id: start_runner
        uses: pagopa/interop-github-runner-aws-create-action@main
        with:
          aws_region: ${{ secrets.AWS_REGION }}
          iam_role_arn: ${{ secrets.ECS_IAM_ROLE_ARN }}
          ecs_cluster_name: ${{ secrets.ECS_CLUSTER_NAME }}
          ecs_task_definition: ${{ secrets.TASK_DEFINITION }}
          ecs_container_name: github-runner
          ecs_task_subnet_id: ${{ secrets.SUBNET_ID }}
          ecs_task_sec_group: ${{ secrets.SEC_GROUP_ID }}
          pat_token: ${{ secrets.BOT_TOKEN }}

  build:
    name: Build and Test
    needs: [create_runner]
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.10]
        java: [temurin@11]
    # runs-on: ${{ matrix.os }}
    runs-on: [self-hosted, "run_id:${{ github.run_id }}"]
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: List sbt
        run: | 
          ls /usr/share/sbt/bin/sbt

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      # - name: Install node 16
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16

      # - name: Installing openapi-generator-cli
      #   run: npm install -g @openapitools/openapi-generator-cli

      # - name: Generate code and Build
      #   run: sbt ++${{ matrix.scala }} generateCode test

  # publish:
  #   name: Publish Images
  #   needs: [build]
  #   permissions:
  #     id-token: write
  #     contents: read
  #     packages: write
  #   if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/1.0.x' || startsWith(github.ref, 'refs/tags/'))
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       scala: [2.13.10]
  #       java: [temurin@11]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout current branch (full)
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Setup Java (temurin@11)
  #       if: matrix.java == 'temurin@11'
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: temurin
  #         java-version: 11

  #     - name: Cache sbt
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.sbt
  #           ~/.ivy2/cache
  #           ~/.coursier/cache/v1
  #           ~/.cache/coursier/v1
  #           ~/AppData/Local/Coursier/Cache/v1
  #           ~/Library/Caches/Coursier/v1
  #         key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

  #     - name: Install node 16
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: Installing openapi-generator-cli
  #       run: npm install -g @openapitools/openapi-generator-cli

  #     - name: Regenerating code
  #       run: sbt ++${{ matrix.scala }} generateCode

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: eu-central-1
  #         role-to-assume: 'arn:aws:iam::505630707203:role/interop-github-ecr-dev'
  #         role-session-name: interop-be-monorepo-scala-${{ github.job }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Build, tag, and push image to Amazon ECR
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #       run: 'sbt ++${{ matrix.scala }} docker:publish'


  delete_runner:
    name: Delete Self-Hosted Runner
    needs: [create_runner, build]
    if: ${{ always() && needs.create_runner.result != 'skipped' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        index: [1]
      fail-fast: true
    environment: dev
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Stop Github Runner
        id: stop_runner
        uses: pagopa/interop-github-runner-aws-cleanup-action@main
        with:
          aws_region: ${{ secrets.AWS_REGION }}
          iam_role_arn: ${{ secrets.ECS_IAM_ROLE_ARN }}
          ecs_cluster_name: ${{ secrets.ECS_CLUSTER_NAME }}
          pat_token: ${{ secrets.BOT_TOKEN }}
